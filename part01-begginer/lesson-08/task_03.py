"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.

Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""

import re


class MyException(Exception):
    def __str__(self):
        return "Exception: Value is not number"


def fill_and_return_number_list():
    data_list = list()
    while True:
        user_value = input("Add value into list: ")
        if user_value.lower() == 'stop':
            break
        try:
            match = re.fullmatch("\\d*", user_value)
            if not match:
                raise MyException()
        except MyException:
            print(MyException())
        else:
            data_list.append(int(user_value))
    print(data_list)


fill_and_return_number_list()
